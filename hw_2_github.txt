GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.
В адресной строке: https://github.com/new пишем название JSON, выбираем добавление readme файла, создаем репозиторий
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone https://github.com/bazarazero/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
cd JSON
touch new.json
 7. Добавить файл под гит.
git add new.json
 8. Закоммитить файл.
commit -m "add json file"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
nano new.json
{
        "фио": "Плесовских АВ",
        "возраст": 36,
        "количество домашних животных": 3,
        "будущая желаемая зарплата": "3000$"
}
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 11. Отправить изменения на внешний репозиторий.
git add new.json
git commit -m "add text"
git push
 12. Создать файл preferences.json
+
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
nano preferences.json
{
"Любимый фильм": "Большой куш",
"любимый сериал": "Теория большого взрыва",
"любимая еда": "Креветки",
"любимое время года": "Лето",
"страна которую хотели бы посетить": "Япония"
}
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
nano skills.json
{
"skills": ["git bush", "git hub", "JSON XML", "API", "HTTP", "Charles Fiddler", "SQL", "Postgres", "Jmetr", "Scrum"]
}
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add text"
git push
 16. На веб интерфейсе создать файл bug_report.json.
В своем репозитории JSON нажимаем кнопку Add file и выбираем Create new file
Даем имя bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Пишем снизу в Commit new file: "добавляем баг репорт" и нажимаем Commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
Выбираем файл bug_report.json и нажимаем кнопку редактирования (Edit this file)
{
  "Название": "Можно загрузить очень большой файл в поиске по фото",
  "Шаги": "Войти в личный кабинет WB https://www.wildberries.ru/lk/details под авторизованным пользователем (+7-987-654-32-10, код придет в смс). Открыть сайт, нажать поиск по фото, выбрать файл, к примеру любой blu-ray фильм (около 40ГБ)",
  "Результат": "Файл будет загружаться (http://joxi.ru/V2Vqp7ZHBxnMwm). Таким образом можно повесить сайт если делать это с многих ПК (либо забьется интернет у WB (у конечных пользователей будет тормозить сайт), либо сервер (кластер серверов) может выйти из строя)",
  "Ожидаемый результат": "При загрузке любого файла > 8мб должна выпасть ошибка: Ошибка загрузки фото!",
  "Дополнительная информация": "Если не авторизоваться в WB, то баг не воспроизводится"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Пишем снизу в Commit changes: "описание бага" и нажимаем Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
 21. Создать внешний репозиторий c названием XML.
В адресной строке: https://github.com/new пишем название XML, выбираем добавление readme файла, создаем репозиторий
 22. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/bazarazero/XML.git
 23. Внутри локального XML создать файл “new.xml”.
touch new.xml
 24. Добавить файл под гит.
git add new.xml
 25. Закоммитить файл.
git commit -m "add xml file"
 26. Отправить файл на внешний GitHub репозиторий.
git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
nano new.xml
<?xml version="1.0"?>
<информация_о_себе>
	<фио>Плесовских АВ</фио>
	<возраст>36</возраст>
	<количество_дом_животных>3</количество_дом_животных>
        <будущая_зп>3000$</будущая_зп>
</информация_о_себе>
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 28. Отправить изменения на внешний репозиторий.
git commit -am "add information"
 29. Создать файл preferences.xml
touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
nano preferences.xml
<?xml version="1.0"?>
<Предпочтения>
	<любимый_фильм>Большой куш</любимый_фильм>
	<любимый_сериал>Теория большого взрыва</любимый_сериал>
	<любимая_еда>Креветки</любимая_еда>
	<любимое_время_года>Лето</любимое_время_года>
	<страна_которую_хотели_бы_посетить>Япония</страна_которую_хотели_бы_посетить>
</Предпочтения>
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
nano skills.xml
<?xml version="1.0"?>
<skills>git bush, git hub, JSON XML, API, HTTP, Charles Fiddler, SQL, Postgres, Jmetr, Scrum</skills>
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 32. Сделать коммит в одну строку.
git add . && git commit -am "add and commit 2 files"
 33. Отправить сразу 2 файла на внешний репозиторий.
git push
 34. На веб интерфейсе создать файл bug_report.xml.
В своем репозитории XML нажимаем кнопку Add file и выбираем Create new file
Даем имя bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
В commit new file пишем: "add xml bug_report"
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
<?xml version="1.0"?>
<bug_report>
  <Название>Можно загрузить очень большой файл в поиске по фото</Название>
  <Шаги>Войти в личный кабинет WB https://www.wildberries.ru/lk/details под авторизованным пользователем (+7-987-654-32-10, код придет в смс). Открыть сайт, нажать поиск по фото, выбрать файл, к примеру любой blu-ray фильм (около 40ГБ)</Шаги>
  <Результат>Файл будет загружаться (http://joxi.ru/V2Vqp7ZHBxnMwm). Таким образом можно повесить сайт если делать это с многих ПК (либо забьется интернет у WB (у конечных пользователей будет тормозить сайт), либо сервер (кластер серверов) может выйти из строя)</Результат>
  <Ожидаемый_результат>При загрузке любого файла > 8мб должна выпасть ошибка: Ошибка загрузки фото!</Ожидаемый_результат>
  <Дополнительная_информация>Если не авторизоваться в WB, то баг не воспроизводится</Дополнительная_информация>
</bug_report>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
В Commit changesaddпишем: add text
 38. Синхронизировать внешний и локальный репозиторий XML
git pull && git push

TXT
 1. Создать внешний репозиторий c названием TXT.
В адресной строке: https://github.com/new пишем название TXT, выбираем добавление readme файла, создаем репозиторий
 2. Клонировать репозиторий TXT на локальный компьютер.
git clone https://github.com/bazarazero/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
Находясь в папке TXT написать: touch new.txt
 4. Добавить файл под гит.
git add new.txt
 5. Закоммитить файл.
git commit -m "add new file"
 6. Отправить файл на внешний GitHub репозиторий.
git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
nano new.txt
Информация о себе:
фио: Плесовских АВ
возраст": 36
количество домашних животных: 3
будущая желаемая зарплата: 3000$
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 8. Отправить изменения на внешний репозиторий.
git add new.txt && git commit -m "add text"
 9. Создать файл preferences.txt
touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
nano preferences.txt
Любимый фильм: Большой куш
любимый сериал: Теория большого взрыва
любимая еда: Креветки
любимое время года: Лето
страна которую хотели бы посетить: Япония
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
nano skills.txt
git bush, git hub, JSON XML, API, HTTP, Charles Fiddler, SQL, Postgres, Jmetr, Scrum
Нажимаем ctrl+0 (сохраняем), энтер подтверждаем, нажимаем ctrl+x (выходим)
 12. Сделать коммит в одну строку.
git add . && git commit -am "add 2 files with text"
 13. Отправить сразу 2 файла на внешний репозиторий.
git push
 14. На веб интерфейсе создать файл bug_report.txt.
В своем репозитории TXT нажимаем кнопку Add file и выбираем Create new file
Даем имя bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
В commit new file пишем: "add txt bug_report" и нажимаем Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
Выбираем файл bug_report.txt и нажимаем кнопку редактирования (Edit this file)
Название": "Можно загрузить очень большой файл в поиске по фото",
Шаги": "Войти в личный кабинет WB https://www.wildberries.ru/lk/details под авторизованным пользователем (+7-987-654-32-10, код придет в смс). Открыть сайт, нажать поиск по фото, выбрать файл, к примеру любой blu-ray фильм (около 40ГБ)",
Результат": "Файл будет загружаться (http://joxi.ru/V2Vqp7ZHBxnMwm). Таким образом можно повесить сайт если делать это с многих ПК (либо забьется интернет у WB (у конечных пользователей будет тормозить сайт), либо сервер (кластер серверов) может выйти из строя)",
Ожидаемый результат": "При загрузке любого файла > 8мб должна выпасть ошибка: Ошибка загрузки фото!",
Дополнительная информация": "Если не авторизоваться в WB, то баг не воспроизводится"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
В Commit changesaddпишем: add text
 18. Синхронизировать внешний и локальный репозиторий TXT
git pull && git push